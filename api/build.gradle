plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'org.dev.plannet'
version = '1.0'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorEx
}

ext {
    snippetsDir = file('./build/generated-snippets')
}

dependencies {
    implementation project(':common')
    implementation project(':domain')

    // other dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Spring REST Docs 추가
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    // 스프링 swagger
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    asciidoctorEx 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

springBoot {
    buildInfo()
    mainClass = "org.dev.plannet.Application"
}


bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}") {
        into 'static/docs'
    }
}

jar {
    enabled = false
}

tasks.named('test') {
    useJUnitPlatform {
        excludeTags("integration")
    }
}

tasks.register("integrationTest", Test) {
    outputs.dir snippetsDir
    useJUnitPlatform {
        includeTags("integration")
    }
}
tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    configurations 'asciidoctorEx'
    dependsOn integrationTest
}

